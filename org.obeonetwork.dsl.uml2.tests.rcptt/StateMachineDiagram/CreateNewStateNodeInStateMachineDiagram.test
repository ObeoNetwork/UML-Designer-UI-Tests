--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _xUmjgA-GEeWqyPO4VW22gA,_MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_4eO8kBAeEeWa5c8q1ijOWg,_X-rQgH-QEeS4X6G9cD21hw,_Erm0gN3vEeS32_At8WTqBw
Element-Name: CreateNewStateNodeInStateMachineDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _4wFy0N3wEeS32_At8WTqBw
Runtime-Version: 1.5.5.201503020312
Save-Time: 12/28/15 3:01 PM
Testcase-Type: ecl
Verifications: _U2iOMN3zEeS32_At8WTqBw

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Test:
In an empty State Machine diagram, select in palette State and click on Region1

Result:
- State1 is created in Region1

- test composite state orientation
(create regions in state) check if horizontal or vertical then with palette tool Stete, click on existing state and check orientation of regions
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Create new state in Region1 
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry State] {
        mouse-move 38 4 button1 -height 23 -width 134
        mouse-press 38 4 button1 -height 23 -width 134
        mouse-release 38 4 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            mouse-move 37 54 button1 -height 481 -width 571
            mouse-press 37 54 button1 -height 481 -width 571
            mouse-release 37 54 button1 524288 -height 481 -width 571
        }
    }
}

// Check Diagram
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart] {
    with [get-edit-part -name State1] {
        get-property "getFigure().getMainFigure().getChildren().GradientRoundedRectangle[0].getLabelFigure().getText()" 
            | equals State1 | verify-true
        get-property "getFigure().isVisible()" | equals true | verify-true
    }
    get-figure "1/0" 
        | get-property "getContents().getChildren().BorderedNodeFigure[0].getChildren().DefaultSizeNodeFigure[0].getChildren().GradientRoundedRectangle[0].getLabelFigure().getText()" 
        | equals State1 | verify-true
}

// Check model
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart] {
    with [get-edit-part -name State1 | get-edit-part -className DNodeListName2EditPart] {
        get-property "element.target.name" | equals State1 | verify-true
        get-property "element.semanticElements.State[0].name" | equals State1 | verify-true
        get-property "element.semanticElements.State[0].container.name" | equals Region1 | verify-true
    }
}

// Try to create state outside of state machine (invalid action)
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry State] {
        mouse-move 31 18 button1 -height 23 -width 134
        mouse-press 31 18 button1 -height 23 -width 134
        mouse-release 31 18 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram"] {
         mouse-move 823 168 button1 -height 524 -width 824
        mouse-press 823 168 button1 -height 524 -width 824
        mouse-release 823 168 button1 524288 -height 524 -width 824
    }
}
// Test: change orientation of StateMachine mapping
// create two regions
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry Region] {
        mouse-move 47 5 button1 -height 23 -width 178
        mouse-press 47 5 button1 -height 23 -width 178
        mouse-release 47 5 button1 524288 -height 23 -width 178
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 
        | get-edit-part -name Region1] {
        with [get-edit-part -name State1 | get-edit-part -className DNodeListViewNodeListCompartmentEditPart] {
            mouse-move 26 1 button1 -height 12 -width 36
            mouse-press 26 1 button1 -height 12 -width 36
            mouse-release 26 1 button1 524288 -height 12 -width 36
        }
    }
      with [get-palette | get-palette-entry Region] {
        mouse-move 43 10 button1 -height 23 -width 178
        mouse-press 43 10 button1 -height 23 -width 178
        mouse-release 43 10 button1 524288 -height 23 -width 178
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 
        | get-edit-part -name Region1] {
        with [get-edit-part -name State1] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part 
                -name Region1] {
                with [get-edit-part -name Region1] {
                    mouse-move 19 10 button1 -height 40 -width 40
                    mouse-press 19 10 button1 -height 40 -width 40
                    mouse-release 20 10 button1 524288 -height 40 -width 40
                }
            }
        }
    }
}
//Check orientation
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram"] {
    get-property "element.containers.DNodeContainer[2].name" | equals State1 | verify-true
    get-property "element.containers.DNodeContainer[2].childrenPresentation" | equals HorizontalStack | verify-true
}
// Change orientation from horizontal to vertical
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette|get-palette-entry State] {
        mouse-move 40 13 button1 -height 23 -width 178
        mouse-press 40 13 button1 -height 23 -width 178
        mouse-release 40 13 button1 524288 -height 23 -width 178
        mouse-hover 40 13 -height 23 -width 178
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 
        | get-edit-part -name Region1 | get-edit-part -name State1] {
        mouse-move 74 10 button1 -height 69 -width 84
        mouse-press 74 10 button1 -height 69 -width 84
        mouse-release 74 10 button1 524288 -height 69 -width 84
    }
}
//Check orientation
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram"] {
    get-property "element.containers.DNodeContainer[2].name" | equals State1 | verify-true
    get-property "element.containers.DNodeContainer[2].childrenPresentation" | equals VerticalStack | verify-true
}
// Change orientation from horizontal to vertical
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry State] {
        mouse-move 87 18 button1 -height 23 -width 178
        mouse-press 87 18 button1 -height 23 -width 178
        mouse-release 87 18 button1 524288 -height 23 -width 178
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 
        | get-edit-part -name Region1 | get-edit-part -name State1 | get-edit-part -className DNodeContainerName2EditPart] {
        mouse-move 27 8 button1 -height 15 -width 32
        mouse-press 27 8 button1 -height 15 -width 32
        mouse-release 27 8 button1 524288 -height 15 -width 32
    }
}
//Check orientation
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram"] {
    get-property "element.containers.DNodeContainer[2].name" | equals State1 | verify-true
    get-property "element.containers.DNodeContainer[2].childrenPresentation" | equals HorizontalStack | verify-true
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
